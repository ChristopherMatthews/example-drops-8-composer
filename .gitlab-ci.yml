# Build tools Dockerfile
image: quay.io/pantheon-public/build-tools-ci:5.x

# Default Variables
variables:
  CI_BUILD_NUMBER: $CI_PIPELINE_IID
  DEFAULT_SITE: $CI_PROJECT_NAME
  PR_NUMBER: $CI_MERGE_REQUEST_IID
  CI_BRANCH: $CI_COMMIT_REF_NAME

# Cache libraries in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - vendor/
  - /composer/cache
  - $HOME/.composer/cache

stages:
- prepare
- build
- test
- cleanup

before_script:
- export PATH="$PATH:$CI_PROJECT_DIR/.ci/scripts"
- export BASH_ENV="$HOME/.envvarsrc"
- /build-tools-ci/scripts/set-environment
- source $BASH_ENV
# See https://docs.gitlab.com/ee/ci/ssh_keys/README.html
- eval $(ssh-agent -s) && ssh-add <(echo "$SSH_PRIVATE_KEY")
- terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

prepare:environment:
  stage: prepare
  variables:
    GIT_STRATEGY: none
  script: cp $BASH_ENV bash_env.txt
  artifacts:
    paths:
      - bash_env.txt
    name: "$CI_COMMIT_REF_NAME-bash_env"
    expire_in: 6 hours
  only:
    - merge_requests
    - master

deploy:
  stage: build
  environment:
    name: deploy/$TERMINUS_ENV
    url: https://$TERMINUS_ENV-$TERMINUS_SITE.pantheonsite.io/
  script:
  - echo "Target site.env is $TERMINUS_SITE.$TERMINUS_ENV"
  - 01-prepare
  - composer -n build-assets
  - 02-init-site-under-test-clone-existing
  only:
  - merge_requests
  - master

test:code_sniff_unit_test:
  stage: test
  script:
  - composer install --no-ansi --no-interaction --optimize-autoloader --no-progress
  - rm -rf web
  - git checkout -- web
  - composer -n lint
  - composer -n code-sniff
  - composer -n unit-test
  only:
  - merge_requests
  - master
  artifacts:
    reports:
      junit: phpcs--*.xml

test:behat:
  stage: test
  script:
  - composer install --no-ansi --no-interaction --optimize-autoloader --no-progress
  - 03-test
  - 04-post-test
  only:
  - merge_requests
  - master
  artifacts:
    reports:
      junit: behat-tests/*.xml

test:visual_regression:
  image: backstopjs/backstopjs:3.9.5
  before_script:
    - export BASH_ENV="$HOME/.envvarsrc"
  stage: test
  variables:
    CI_BUILD_URL: "$CI_PROJECT_DIR"
  script:
    - cp bash_env.txt $BASH_ENV
    - source $BASH_ENV
    - ./.ci/visual-regression-test.sh
  only:
    - merge_requests
    - master
  artifacts:
    paths:
      - "$CI_PROJECT_DIR/backstop_data/html_report"
    name: "$CI_COMMIT_REF_NAME-visual_regression"
    expire_in: 1 week
    reports:
      junit: backstop_data/ci_report/xunit.xml

test:behat:cleanup:
  stage: cleanup
  when: always
  script:
  - 05-merge-master
  - 09-cleanup-fixtures
  only:
  - merge_requests
  - master
  dependencies:
  - test:behat
